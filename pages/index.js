import Head from "next/head"
import { useState, useRef, useEffect, useContext } from "react"
import { FaRegEye, FaRegEyeSlash } from "react-icons/fa"
import { useRouter } from "next/router"
import axios from "axios"
import Logo from "../public/logo_transparent_background.png"
import Image from "next/image"

export default function Home() {
  const inputStyles =
    "text-black font-normal px-4 pt-3 pb-2 border-none w-full placeholder:text-gray-400 hover:border-gray-400 focus:outline-none focus:ring-none focus:border-none"

  const labelStyles = "block text-sm absolute left-3 -top-3 bg-white px-1.5"
  const formGroup =
    "border-2 border-gray-400 text-gray-400 focus-within:text-purple-700 focus-within:font-semibold hover:border-purple-400 focus-within:border-2 focus-within:border-purple-700 rounded relative"

  const router = useRouter()
  const inputRef = useRef()
  const [inputType, setInputType] = useState("password")
  const [user, setUser] = useState({
    email: "",
    password: "",
  })
  const [loginError, setLoginError] = useState("")

  useEffect(() => {
    inputRef.current.focus()
  }, [])

  const onSubmit = async event => {
    event.preventDefault()
    setLoginError("")
    const res = await axios
      .post("/api/v2/login", {
        email: user.email,
        password: user.password,
      })
      .catch(err => {
        setLoginError(err?.response?.data?.message)
      })

    if (res?.data?.user) {
      router.push("/dashboard/")
    }
    if (res?.data?.admin) {
      router.push("/admin")
    }
  }

  const handleChange = event => {
    const { id, value } = event.target
    setUser({ ...user, [id]: value })
  }

  return (
    <div className="h-screen">
      <Head>
        <title>TKBrown</title>
        {/* <meta name="description" content="Generated by create next app" /> */}
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link
          rel="apple-touch-icon"
          sizes="180x180"
          href="/logo_transparent_background_small.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="/logo_transparent_background_small.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="16x16"
          href="/logo_transparent_background_small.png"
        />
        <link rel="manifest" href="/site.webmanifest"></link>
      </Head>

      <main className="flex items-center justify-center h-full flex-col">
        <div className="w-56 h-28 relative flex">
          <Image src={Logo} objectFit="contain" layout="fill" />
        </div>

        <div className="bg-white mt-6 py-5 px-10 rounded-xl shadow-lg">
          <form className="space-y-6">
            <p className="text-center text-gray-600 font-semibold">LOGIN</p>

            {/**error message */}
            <p className="text-red-500 text-sm">{loginError}</p>

            <div className={formGroup}>
              <label htmlFor="email" className={labelStyles}>
                Email
              </label>
              <input
                ref={inputRef}
                type="text"
                id="email"
                className={inputStyles}
                onChange={e => handleChange(e)}
                value={user.email}
              />
            </div>
            <div className={formGroup}>
              <label htmlFor="password" className={labelStyles}>
                Password
              </label>
              <input
                type={inputType}
                id="password"
                autoComplete="off"
                className={inputStyles}
                onChange={e => handleChange(e)}
                value={user.password}
              />
              <span className="absolute text-gray-600 bottom-2.5 right-2.5 z-10">
                {inputType === "password" ? (
                  <FaRegEye size={16} onClick={() => setInputType("text")} />
                ) : (
                  <FaRegEyeSlash
                    size={16}
                    onClick={() => setInputType("password")}
                  />
                )}
              </span>
            </div>
            <button
              className="w-full bg-purple-700 text-white py-2 rounded-xl hover:bg-purple-400"
              onClick={e => onSubmit(e)}
            >
              LOGIN
            </button>
          </form>
        </div>
      </main>
    </div>
  )
}
